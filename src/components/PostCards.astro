---
// filepath: src/components/PostCards.astro
export interface Props {
  title: string;
  author: string;
  pubDatetime: string;
  tags: string[];
  description: string;
  cover?: string | { src: string }; // Accepts string or import object
  href: string;
}
const { title, author, pubDatetime, tags, description, cover, href } = Astro.props;

// Debug output
console.log('[PostCards.astro] Rendering:', { title, cover, coverType: typeof cover, coverSrc: typeof cover === "object" && cover ? cover.src : cover });
---

<article class="flex flex-row bg-white dark:bg-gray-900 rounded-lg shadow-md overflow-hidden mb-8 border border-gray-200 dark:border-gray-700">
  <div class="flex-1 p-6 flex flex-col justify-between min-w-0">
    <div>
      <h2 class="text-2xl font-bold mb-2 truncate">
        <a href={href} class="hover:underline">{title}</a>
      </h2>
      <div class="flex items-center text-sm text-gray-500 dark:text-gray-400 mb-2 flex-wrap">
        <span>By {author}</span>
        <span class="mx-2">â€¢</span>
        <time datetime={pubDatetime}>{new Date(pubDatetime).toLocaleDateString()}</time>
      </div>
      <p class="mb-4 text-gray-700 dark:text-gray-300 line-clamp-3">{description}</p>
      <div class="flex flex-wrap gap-2">
        {tags.map(tag => (
          <span class="bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 px-2 py-1 rounded text-xs font-medium">{tag}</span>
        ))}
      </div>
    </div>
  </div>
  <a href={href} class="hidden sm:flex w-48 h-48 flex-shrink-0 items-center justify-center bg-gray-100 dark:bg-gray-800">
    {cover ? (
      <img
        src={typeof cover === "object" && cover && "src" in cover ? cover.src : cover}
        alt={title}
        width={192}
        height={192}
        class="object-cover w-full h-full rounded-l-none rounded-r-lg"
      />
    ) : (
      <div class="w-full h-full flex items-center justify-center text-gray-400 dark:text-gray-600 text-4xl">
        <span>No Image</span>
      </div>
    )}
  </a>
</article>