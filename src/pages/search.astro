---
import { getCollection } from "astro:content";
import { SkiCycleRunConfig } from "skicyclerun.config";
import Layout from "@layouts/Layout.astro";
import Main from "@layouts/Main.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import SearchBar from "@components/Search";
import getSortedPosts from "@utils/getSortedPosts";

// Retrieve all published articles
const posts = await getCollection("blog", ({ data }) => !data.draft);
const sortedPosts = getSortedPosts(posts);

// Helper to produce a lightweight, lowercased body snippet (strip most markdown / code blocks)
const stripMarkdown = (raw: string) =>
  raw
    .replace(/```[\s\S]*?```/g, " ") // fenced code
    .replace(/`[^`]*`/g, " ") // inline code
    .replace(/!\[[^\]]*]\([^)]*\)/g, " ") // images
    .replace(/\[[^\]]*]\([^)]*\)/g, " ") // links
    .replace(/[#>*_~`-]+/g, " ") // md tokens
    .replace(/\s+/g, " ")
    .trim();

// Provide ONLY serializable primitives to the island (avoid Date objects / functions)
const searchList = sortedPosts.map(({ data, slug, body }) => {
  const tags = data.tags ?? [];
  const rawBody = body ? stripMarkdown(body) : "";
  // Limit snippet length to keep payload reasonable
  const bodySnippet = rawBody.slice(0, 4000).toLowerCase();

  // Build composite searchText including body snippet
  const searchText = [
    data.title,
    data.description,
    tags.join(" "),
    data.author,
    data.type,
    slug,
    data.class || "",
    data.album || "",
    bodySnippet,
  ]
    .filter(Boolean)
    .join(" \n ")
    .toLowerCase();

  return {
    slug,
    title: data.title,
    description: data.description ?? "",
    type: data.type,
    author: data.author,
    pubDatetime: data.pubDatetime?.toISOString?.() ?? null,
    modDatetime: data.modDatetime?.toISOString?.() ?? null,
    tags,
    bodySnippet, // new searchable field
    searchText,
  };
});
---

<Layout title={`Search | ${SkiCycleRunConfig.title}`}>
  <Header activeNav="search" />
  <Main pageTitle="Search" pageDesc="Search any article ...">
    <SearchBar client:load searchList={searchList} />
  </Main>
  <Footer />
</Layout>
